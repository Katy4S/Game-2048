{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js"],"sourcesContent":["(function () {\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Game() {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = this.createEmptyBoard();\n        this.score = 0;\n        this.status = 'idle';\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.board = this.createEmptyBoard();\n                this.score = 0;\n                this.status = 'playing';\n                this.addNewTile();\n                this.addNewTile();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.start();\n            }\n        },\n        {\n            key: \"createEmptyBoard\",\n            value: function createEmptyBoard() {\n                return Array.from({\n                    length: 4\n                }, function() {\n                    return Array(4).fill(0);\n                });\n            }\n        },\n        {\n            key: \"addNewTile\",\n            value: function addNewTile() {\n                var emptyCells = this.getEmptyCells();\n                if (emptyCells.length) {\n                    var _emptyCells_Math_floor = emptyCells[Math.floor(Math.random() * emptyCells.length)], r = _emptyCells_Math_floor.r, c = _emptyCells_Math_floor.c;\n                    this.board[r][c] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"getEmptyCells\",\n            value: function getEmptyCells() {\n                return this.board.flatMap(function(row, r) {\n                    return row.map(function(cell, c) {\n                        return cell === 0 ? {\n                            r: r,\n                            c: c\n                        } : null;\n                    });\n                }).filter(Boolean);\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                return this.shiftTiles(function(row) {\n                    return _this.mergeRow(row);\n                });\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                return this.shiftTiles(function(row) {\n                    var mergedRow = _this.mergeRow(row.slice().reverse());\n                    return mergedRow.reverse();\n                });\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.transposeBoard();\n                var moved = this.moveLeft();\n                this.transposeBoard();\n                return moved;\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.transposeBoard();\n                var moved = this.moveRight();\n                this.transposeBoard();\n                return moved;\n            }\n        },\n        {\n            key: \"shiftTiles\",\n            value: function shiftTiles(transform) {\n                var moved = false;\n                var newBoard = this.board.map(function(row) {\n                    var newRow = transform(row);\n                    if (JSON.stringify(row) !== JSON.stringify(newRow)) moved = true;\n                    return newRow;\n                });\n                if (moved) {\n                    this.board = newBoard;\n                    this.addNewTile();\n                    this.checkGameOver();\n                }\n                return moved;\n            }\n        },\n        {\n            key: \"mergeRow\",\n            value: function mergeRow(row) {\n                var filtered = row.filter(function(val) {\n                    return val !== 0;\n                });\n                var merged = [];\n                for(var i = 0; i < filtered.length; i++)if (filtered[i] === filtered[i + 1]) {\n                    merged.push(filtered[i] * 2);\n                    this.score += filtered[i] * 2;\n                    i++;\n                } else merged.push(filtered[i]);\n                while(merged.length < 4)merged.push(0);\n                return merged;\n            }\n        },\n        {\n            /* eslint-disable function-paren-newline */ key: \"transposeBoard\",\n            value: function transposeBoard() {\n                var _this = this;\n                this.board = this.board[0].map(function(_, colIndex) {\n                    return _this.board.map(function(row) {\n                        return row[colIndex];\n                    });\n                });\n            }\n        },\n        {\n            /* eslint-enable function-paren-newline */ key: \"checkGameOver\",\n            value: function checkGameOver() {\n                if (this.board.some(function(row) {\n                    return row.includes(2048);\n                })) this.status = 'win';\n                else if (this.getEmptyCells().length === 0 && !this.canMerge()) this.status = 'lose';\n            }\n        },\n        {\n            /* eslint-disable function-paren-newline */ key: \"canMerge\",\n            value: function canMerge() {\n                var _this = this;\n                return this.board.some(function(row, r) {\n                    return row.some(function(val, c) {\n                        return val !== 0 && (c < 3 && val === row[c + 1] || r < 3 && val === _this.board[r + 1][c]);\n                    });\n                });\n            }\n        }\n    ]);\n    return Game;\n}();\nvar /* eslint-enable function-paren-newline */ $3d28d7f1aac198f5$export$2e2bcd8739ae039 = $3d28d7f1aac198f5$var$Game;\n\n\n'use strict';\nvar $197cd56b15c33885$var$game = new (0, $3d28d7f1aac198f5$export$2e2bcd8739ae039)();\nvar $197cd56b15c33885$var$startButton = document.querySelector('.button.start');\nvar $197cd56b15c33885$var$scoreDisplay = document.querySelector('.game-score');\nvar $197cd56b15c33885$var$gameField = document.querySelector('.game-field');\nvar $197cd56b15c33885$var$winMessage = document.querySelector('.message-win');\nvar $197cd56b15c33885$var$loseMessage = document.querySelector('.message-lose');\nvar $197cd56b15c33885$var$startMessage = document.querySelector('.message-start');\nfunction $197cd56b15c33885$var$updateCell(r, c, value) {\n    var cell = $197cd56b15c33885$var$gameField.rows[r].cells[c];\n    cell.className = 'field-cell';\n    if (value) {\n        cell.classList.add(\"field-cell--\".concat(value));\n        cell.textContent = value;\n    } else cell.textContent = '';\n}\nfunction $197cd56b15c33885$var$updateUI() {\n    $197cd56b15c33885$var$scoreDisplay.textContent = $197cd56b15c33885$var$game.getScore();\n    var board = $197cd56b15c33885$var$game.getState();\n    board.forEach(function(row, r) {\n        return row.forEach(function(value, c) {\n            return $197cd56b15c33885$var$updateCell(r, c, value);\n        });\n    });\n    $197cd56b15c33885$var$winMessage.classList.toggle('hidden', $197cd56b15c33885$var$game.getStatus() !== 'win');\n    $197cd56b15c33885$var$loseMessage.classList.toggle('hidden', $197cd56b15c33885$var$game.getStatus() !== 'lose');\n}\nfunction $197cd56b15c33885$var$handleMove(eventKey) {\n    if ($197cd56b15c33885$var$game.getStatus() !== 'playing') return;\n    var moveMap = {\n        ArrowLeft: function() {\n            return $197cd56b15c33885$var$game.moveLeft();\n        },\n        ArrowRight: function() {\n            return $197cd56b15c33885$var$game.moveRight();\n        },\n        ArrowUp: function() {\n            return $197cd56b15c33885$var$game.moveUp();\n        },\n        ArrowDown: function() {\n            return $197cd56b15c33885$var$game.moveDown();\n        }\n    };\n    var moveMade = moveMap[eventKey] && moveMap[eventKey]();\n    if (moveMade) $197cd56b15c33885$var$updateUI();\n}\nfunction $197cd56b15c33885$var$startGame() {\n    if ($197cd56b15c33885$var$game.getStatus() === 'idle' || $197cd56b15c33885$var$game.getStatus() === 'lose' || $197cd56b15c33885$var$game.getStatus() === 'win') {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$startMessage.classList.add('hidden');\n        $197cd56b15c33885$var$startButton.textContent = 'Restart';\n        $197cd56b15c33885$var$startButton.classList.add('restart');\n    } else $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$updateUI();\n}\ndocument.addEventListener('keydown', function(e) {\n    return $197cd56b15c33885$var$handleMove(e.key);\n});\n$197cd56b15c33885$var$startButton.addEventListener('click', $197cd56b15c33885$var$startGame);\n$197cd56b15c33885$var$updateUI();\n\n})();\n//# sourceMappingURL=Game-2048.b645dc90.js.map\n","'use strict';\nimport Game from '../modules/Game.class.js';\n\nconst game = new Game();\n\nconst startButton = document.querySelector('.button.start');\nconst scoreDisplay = document.querySelector('.game-score');\nconst gameField = document.querySelector('.game-field');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\nconst startMessage = document.querySelector('.message-start');\n\nfunction updateCell(r, c, value) {\n  const cell = gameField.rows[r].cells[c];\n\n  cell.className = 'field-cell';\n\n  if (value) {\n    cell.classList.add(`field-cell--${value}`);\n    cell.textContent = value;\n  } else {\n    cell.textContent = '';\n  }\n}\n\nfunction updateUI() {\n  scoreDisplay.textContent = game.getScore();\n\n  const board = game.getState();\n\n  board.forEach((row, r) => row.forEach((value, c) => updateCell(r, c, value)));\n\n  winMessage.classList.toggle('hidden', game.getStatus() !== 'win');\n  loseMessage.classList.toggle('hidden', game.getStatus() !== 'lose');\n}\n\nfunction handleMove(eventKey) {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  const moveMap = {\n    ArrowLeft: () => game.moveLeft(),\n    ArrowRight: () => game.moveRight(),\n    ArrowUp: () => game.moveUp(),\n    ArrowDown: () => game.moveDown(),\n  };\n\n  const moveMade = moveMap[eventKey] && moveMap[eventKey]();\n\n  if (moveMade) {\n    updateUI();\n  }\n}\n\nfunction startGame() {\n  if (\n    game.getStatus() === 'idle' ||\n    game.getStatus() === 'lose' ||\n    game.getStatus() === 'win'\n  ) {\n    game.start();\n    startMessage.classList.add('hidden');\n    startButton.textContent = 'Restart';\n    startButton.classList.add('restart');\n  } else {\n    game.restart();\n  }\n\n  updateUI();\n}\n\ndocument.addEventListener('keydown', (e) => handleMove(e.key));\nstartButton.addEventListener('click', startGame);\n\nupdateUI();\n","class Game {\n  constructor() {\n    this.board = this.createEmptyBoard();\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.board = this.createEmptyBoard();\n    this.score = 0;\n    this.status = 'playing';\n    this.addNewTile();\n    this.addNewTile();\n  }\n\n  restart() {\n    this.start();\n  }\n\n  createEmptyBoard() {\n    return Array.from({ length: 4 }, () => Array(4).fill(0));\n  }\n\n  addNewTile() {\n    const emptyCells = this.getEmptyCells();\n\n    if (emptyCells.length) {\n      const { r, c } =\n        emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      this.board[r][c] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  getEmptyCells() {\n    return this.board\n      .flatMap((row, r) => row.map((cell, c) => (cell === 0 ? { r, c } : null)))\n      .filter(Boolean);\n  }\n\n  moveLeft() {\n    return this.shiftTiles((row) => this.mergeRow(row));\n  }\n\n  moveRight() {\n    return this.shiftTiles((row) => {\n      const mergedRow = this.mergeRow(row.slice().reverse());\n\n      return mergedRow.reverse();\n    });\n  }\n\n  moveUp() {\n    this.transposeBoard();\n\n    const moved = this.moveLeft();\n\n    this.transposeBoard();\n\n    return moved;\n  }\n\n  moveDown() {\n    this.transposeBoard();\n\n    const moved = this.moveRight();\n\n    this.transposeBoard();\n\n    return moved;\n  }\n\n  shiftTiles(transform) {\n    let moved = false;\n    const newBoard = this.board.map((row) => {\n      const newRow = transform(row);\n\n      if (JSON.stringify(row) !== JSON.stringify(newRow)) {\n        moved = true;\n      }\n\n      return newRow;\n    });\n\n    if (moved) {\n      this.board = newBoard;\n      this.addNewTile();\n      this.checkGameOver();\n    }\n\n    return moved;\n  }\n\n  mergeRow(row) {\n    const filtered = row.filter((val) => val !== 0);\n    const merged = [];\n\n    for (let i = 0; i < filtered.length; i++) {\n      if (filtered[i] === filtered[i + 1]) {\n        merged.push(filtered[i] * 2);\n        this.score += filtered[i] * 2;\n        i++;\n      } else {\n        merged.push(filtered[i]);\n      }\n    }\n\n    while (merged.length < 4) {\n      merged.push(0);\n    }\n\n    return merged;\n  }\n\n  /* eslint-disable function-paren-newline */\n  transposeBoard() {\n    this.board = this.board[0].map((_, colIndex) =>\n      this.board.map((row) => row[colIndex]),\n    );\n  }\n  /* eslint-enable function-paren-newline */\n\n  checkGameOver() {\n    if (this.board.some((row) => row.includes(2048))) {\n      this.status = 'win';\n    } else if (this.getEmptyCells().length === 0 && !this.canMerge()) {\n      this.status = 'lose';\n    }\n  }\n\n  /* eslint-disable function-paren-newline */\n  canMerge() {\n    return this.board.some((row, r) =>\n      row.some(\n        (val, c) =>\n          val !== 0 &&\n          ((c < 3 && val === row[c + 1]) ||\n            (r < 3 && val === this.board[r + 1][c])),\n      ),\n    );\n  }\n}\n/* eslint-enable function-paren-newline */\n\nexport default Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n"],"names":["$197cd56b15c33885$var$game","protoProps","Game","instance","TypeError","board","createEmptyBoard","score","status","key","value","addNewTile","start","Array","from","length","fill","emptyCells","getEmptyCells","_emptyCells_Math_floor","Math","floor","random","r","c","flatMap","row","map","cell","filter","Boolean","_this","shiftTiles","mergeRow","mergedRow","slice","reverse","transposeBoard","moved","moveLeft","moveRight","transform","newBoard","newRow","JSON","stringify","checkGameOver","filtered","val","merged","i","push","_","colIndex","some","includes","canMerge","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","Constructor","prototype","$197cd56b15c33885$var$startButton","document","querySelector","$197cd56b15c33885$var$scoreDisplay","$197cd56b15c33885$var$gameField","$197cd56b15c33885$var$winMessage","$197cd56b15c33885$var$loseMessage","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$updateUI","textContent","getScore","getState","forEach","rows","cells","className","classList","add","concat","toggle","getStatus","addEventListener","e","eventKey","moveMap","ArrowLeft","ArrowRight","ArrowUp","moveUp","ArrowDown","moveDown","moveMade","restart"],"version":3,"file":"Game-2048.b645dc90.js.map"}